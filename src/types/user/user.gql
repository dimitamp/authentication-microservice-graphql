enum UserRole {
  basic
  admin
}

scalar DateTime

scalar EmailAddress

scalar Password

type User {
  id: ID!
  email: EmailAddress!
  role: UserRole!
  activated: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  token: String!
}

type Query {
  user(id: ID!): User!
}

input NewUserInput {
  email: EmailAddress!
  password: Password!
  role: UserRole!
}

input AuthenticateUserInput {
  email: EmailAddress!
  password: Password!
}

input UpdateUserInput {
  email: EmailAddress
  role: UserRole
  activated: Boolean
  password: Password
}

type Mutation {
  newUser(input: NewUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  authenticateUser(input: AuthenticateUserInput!): User!
}
